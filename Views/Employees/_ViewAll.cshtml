@model ReflectionIT.Mvc.Paging.PagingList<HR.Models.Employees>
@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflectionIT.Mvc.Paging

@{
    ViewBag.Title = "Index";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
</head>
<body>

    @if (TempData["AlertMessage"] != null)
    {
        <p class="alert alert-success" id="successMessage">@TempData["AlertMessage"]</p>
    }

    <h2>Employees</h2>

    <p>
        <a onclick="showInPopup('@Url.Action("AddOrEdit", "Employees", null, Context.Request.Scheme)', 'New Employee')" class="btn btn-success text-white">
            <i class="fas fa-plus"></i> Add Employee
        </a>
    </p>

    <div class="filter-menu_container">
        <form method="get" class="form-inline">
            <input name="filter" class="form-control" placeholder=""
                   value="@(Model.RouteValue != null && Model.RouteValue.ContainsKey("filter") ? Model.RouteValue["filter"] : "")" />
            <button type="submit" class="btn btn-info">
                <span class="glyphicon glyphicon-search" aria-hidden="true"></span> Search
            </button>
        </form>

        <div class="menu-container">
            <i class="fas fa-bars menu-icon" onclick="toggleMenu()"></i>
            <div class="dropdown-content" id="dropdownMenu">
                <a onclick="showInPopup('@Url.Action("Index", "Emails", null, Context.Request.Scheme)', 'Email')">Email</a>
                <form method="post" asp-controller="Employees" asp-action="ExportToExcel">
                    <input class="export_button" type="submit" value="Export To Excel" />
                </form>
                <a href="javascript:void(0);" onclick="printPageArea('printableArea')">Print</a>
            </div>
        </div>
    </div>

    <div class="table-container">
        <div id="printableArea">
            <table class="table table-bordered" bgcolor="white">
                <thead>
                    <tr>
                        <th>@Html.SortableHeaderFor(model => model.EmployeeId, this.Model)</th>
                        <th>@Html.SortableHeaderFor(model => model.Name, this.Model)</th>
                        <th>@Html.SortableHeaderFor(model => model.OrganizationId, this.Model)</th>
                        <th>@Html.SortableHeaderFor(model => model.EmploymentDate, this.Model)</th>
                        <th>@Html.SortableHeaderFor(model => model.Email, this.Model)</th>
                        <th>@Html.SortableHeaderFor(model => model.Team, this.Model)</th>
                        <th>@Html.SortableHeaderFor(model => model.CompanyShortName, this.Model)</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr id="row_@item.Id">
                            <td>@Html.DisplayFor(modelItem => item.EmployeeId)</td>
                            <td>@Html.DisplayFor(modelItem => item.Name)</td>
                            <td>@Html.DisplayFor(modelItem => item.OrganizationId)</td>
                            @{
                                var dateTimeNow = (DateTime)item.EmploymentDate;
                                var dateOnlyString = dateTimeNow.ToShortDateString();
                            }
                            <td>@dateOnlyString</td>
                            <td>@Html.DisplayFor(modelItem => item.Email)</td>
                            <td>@Html.DisplayFor(modelItem => item.Team)</td>
                            <td>@Html.DisplayFor(modelItem => item.CompanyShortName)</td>
                            <td class="action_container">
                                <a onclick="showInPopup('@Url.Action("AddOrEdit", "Employees", new { id = item.Id }, Context.Request.Scheme)', 'Update Employee')" class="btn btn-info text-white">
                                    <i class="fas fa-pencil-alt"></i> <!-- Edit icon -->
                                </a>
                                <button class="btn btn-danger" onclick="ConfirmDelete(@item.Id)">
                                    <i class="fas fa-trash-alt"></i> <!-- Delete icon -->
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="modal fade" id="myModal">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Delete Employee</h5>
                        <a href="#" class="close" data-dismiss="modal">&times;</a>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to delete this employee?</p>
                    </div>
                    <div class="modal-footer">
                        <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                        <a href="#" class="btn btn-success" onclick="DeleteEmployee()">Confirm</a>
                    </div>
                </div>
            </div>
        </div>

        <input type="hidden" id="hiddenId" />

    </div>

    <nav aria-label="Pagination">
        <vc:pager paging-list="@Model" />
    </nav>

    <input type="button" value="Back" class="buttons_container btn btn-secondary" onclick="location.href='@Url.Action("Index", "Interviews")'" />

    <script>
        var ConfirmDelete = function (Id) {
            $("#hiddenId").val(Id);
            $("#myModal").modal('show');
        }

        var DeleteEmployee = function () {
            $("#loaderDiv").show();
            var EmployeeId = $("#hiddenId").val();
            $.ajax({
                url: '@Url.Action("DeleteEmployee", "Employees")/',
                data: { EmployeeId: EmployeeId },
                success: function (result) {
                    $("#loaderDiv").hide();
                    $("#myModal").modal("hide");
                    $("#row_" + EmployeeId).remove();
                },
                error: function (result) {
                    console.log(result);
                }
            });
        }

        function printPageArea(areaID) {
            var printContent = document.getElementById(areaID);
            var WinPrint = window.open('', '', 'width=900,height=650');
            WinPrint.document.write(printContent.innerHTML);
            WinPrint.document.close();
            WinPrint.focus();
            WinPrint.print();
            WinPrint.close();
        }

        function toggleMenu() {
            var menu = document.getElementById('dropdownMenu');
            menu.style.display = menu.style.display === 'block' ? 'none' : 'block';
        }

        // Close the dropdown if the user clicks outside of it
        window.onclick = function (event) {
            if (!event.target.matches('.menu-icon')) {
                var dropdowns = document.getElementsByClassName('dropdown-content');
                for (var i = 0; i < dropdowns.length; i++) {
                    var openDropdown = dropdowns[i];
                    if (openDropdown.style.display === 'block') {
                        openDropdown.style.display = 'none';
                    }
                }
            }
        }
    </script>

</body>
</html>
