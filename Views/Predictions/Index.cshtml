@model ReflectionIT.Mvc.Paging.PagingList<HR.Models.Candidates>
@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflectionIT.Mvc.Paging

@{
    ViewData["Title"] = "Index";
    var predictions = (Dictionary<int, float>)ViewBag.Predictions;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Prediction</h2>

<form method="get" class="form-inline">
    <input name="filter" class="form-control" placeholder="" value="@Model.RouteValue["Filter"]" />
    <button type="submit" class="btn btn-info">
        <span class="glyphicon glyphicon-search" aria-hidden="true"></span> Search
    </button>
</form>

<div class="table-container">
    <div id="printableArea">
        <table class="table table-bordered" bgcolor="white">
            <thead>
                <tr>
                    <th>@Html.SortableHeaderFor(model => model.Id, this.Model)</th>
                    <th>@Html.SortableHeaderFor(model => model.Name, this.Model)</th>
                    <th>@Html.SortableHeaderFor(model => model.BirthDate, this.Model)</th>
                    <th>@Html.SortableHeaderFor(model => model.FunctionApply, this.Model)</th>
                    <th>@Html.SortableHeaderFor(model => model.FunctionMatch, this.Model)</th>
                    <th>@Html.SortableHeaderFor(model => model.Studies, this.Model)</th>
                    <th>@Html.SortableHeaderFor(model => model.Experience, this.Model)</th>
                    <th>@Html.SortableHeaderFor(model => model.ModeApply, this.Model)</th>
                    <th>@Html.SortableHeaderFor(model => model.Observation, this.Model)</th>
                    <th>Prediction of success</th>
                </tr>
            </thead>
            <tbody>
                @{
                    foreach (var item in Model)
                    {
                        if (item.Status != 2)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Id)</td>
                                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                                <td>@(item.BirthDate.HasValue ? item.BirthDate.Value.ToShortDateString() : "N/A")</td>
                                @{
                                    bool functionApplyFound = false;
                                    foreach (var f in (List<Functions>)ViewBag.FunctionApply)
                                    {
                                        if (item.FunctionApply == f.Id)
                                        {
                                            <td>@f.Name</td>
                                            functionApplyFound = true;
                                            break; // Exit the loop once a match is found
                                        }
                                    }
                                    if (!functionApplyFound)
                                    {
                                        <td></td>
                                        // Empty cell if no match is found
                                    }
                                }

                                @{
                                    bool functionMatchFound = false;
                                    foreach (var f in (List<Functions>)ViewBag.FunctionApply)
                                    {
                                        if (item.FunctionMatch == f.Id)
                                        {
                                            <td>@f.Name</td>
                                            functionMatchFound = true;
                                            break; // Exit the loop once a match is found
                                        }
                                    }
                                    if (!functionMatchFound)
                                    {
                                        <td></td>
                                        // Empty cell if no match is found
                                    }
                                }
                                <td>@Html.DisplayFor(modelItem => item.Studies)</td>
                                <td>@Html.DisplayFor(modelItem => item.Experience)</td>
                                <td>@(item.ModeApply == 2 ? "Email" : "Paper")</td>
                                <td>@Html.DisplayFor(modelItem => item.Observation)</td>
                                <td>
                                    @{
                                        if (predictions != null && predictions.ContainsKey((int)item.Id))
                                        {
                                            <span>@predictions[(int)item.Id].ToString("0.00") %</span>
                                        }
                                    }
                                </td>
                            </tr>
                        }
                    }
                }
            </tbody>
        </table>
    </div>
</div>

<nav aria-label="Suppliers navigation example">
    <vc:pager paging-list="@Model" />
</nav>

<input type="button" value="Back" class="buttons_container btn btn-secondary" onclick="location.href='@Url.Action("Index", "Candidates")'" />
