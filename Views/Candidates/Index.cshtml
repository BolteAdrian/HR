@model ReflectionIT.Mvc.Paging.PagingList<HR.Models.Candidates>
@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflectionIT.Mvc.Paging

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (TempData["AlertMessage"] != null)
{
    <p class="alert alert-success" id="successMessage">@TempData["AlertMessage"]</p>
}

<h2>CVs</h2>

<div class="pages_container">
    <input type="button" value="Add Person" class="btn btn-success text-white" onclick="location.href='@Url.Action("Create", "Candidates")'" />
    <input type="button" value="Statistics" class="btn btn-success text-white" onclick="location.href='@Url.Action("Statistics", "Candidates")'" />
    <input class="btn btn-success text-white" type="button" value="Prediction" onclick="location.href='@Url.Action("Index", "Predictions")'" />
</div>

<div class="filter-menu_container">
    <form method="get" class="form-inline">
        <input name="filter" class="form-control" placeholder=""
               value="@(Model.RouteValue != null && Model.RouteValue.ContainsKey("filter") ? Model.RouteValue["filter"] : "")" />
        <button type="submit" class="btn btn-info">
            <span class="glyphicon glyphicon-search" aria-hidden="true"></span> Search
        </button>
    </form>

    <div class="menu-container">
        <i class="fas fa-bars menu-icon" onclick="toggleMenu()"></i>
        <div class="dropdown-content" id="dropdownMenu">
            <a onclick="showInPopup('@Url.Action("Index", "Emails", null, Context.Request.Scheme)', 'Email')">Email</a>
            <form method="post" asp-controller="Candidates" asp-action="ExportToExcel">
                <input class="export_button" type="submit" value="Export To Excel" />
            </form>
            <a href="javascript:void(0);" onclick="printPageArea('printableArea')">Print</a>
        </div>
    </div>
</div>

<div class="table-container big_table">
    <div id="printableArea">
        <table class="table table-bordered" bgcolor="white">
            <thead>
                <tr>
                    <th>@Html.SortableHeaderFor(model => model.Id)</th>
                    <th>@Html.SortableHeaderFor(model => model.Name)</th>
                    <th>@Html.SortableHeaderFor(model => model.DateApply)</th>
                    <th>@Html.SortableHeaderFor(model => model.FunctionApply)</th>
                    <th>@Html.SortableHeaderFor(model => model.FunctionMatch)</th>
                    <th>@Html.SortableHeaderFor(model => model.Studies)</th>
                    <th>@Html.SortableHeaderFor(model => model.Experience)</th>
                    <th>@Html.SortableHeaderFor(model => model.Observation)</th>
                    <th>@Html.SortableHeaderFor(model => model.ModeApply)</th>
                    <th>@Html.SortableHeaderFor(model => model.County)</th>
                    <th>@Html.SortableHeaderFor(model => model.City)</th>
                    <th>@Html.SortableHeaderFor(model => model.BirthDate)</th>
                    <th>@Html.SortableHeaderFor(model => model.Status)</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr id="row_@item.Id">
                        <td>@Html.DisplayFor(modelItem => item.Id)</td>
                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                        <td>@(item.DateApply.HasValue ? item.DateApply.Value.ToShortDateString() : "N/A")</td>
                        <td>
                            @foreach (var f in (List<Functions>)ViewBag.FunctionApply)
                            {
                                @if (item.FunctionApply == f.Id)
                                {
                                    <span>@f.Name</span>
                                }
                            }
                        </td>
                        <td>
                            @foreach (var f in (List<Functions>)ViewBag.FunctionMatch)
                            {
                                @if (item.FunctionMatch == f.Id)
                                {
                                    <span>@f.Name</span>
                                }
                            }
                        </td>
                        <td>@Html.DisplayFor(modelItem => item.Studies)</td>
                        <td>@Html.DisplayFor(modelItem => item.Experience)</td>
                        <td>@Html.DisplayFor(modelItem => item.Observation)</td>
                        <td>@(item.ModeApply == 2 ? "Email" : "Paper")</td>
                        <td>@Html.DisplayFor(modelItem => item.County)</td>
                        <td>@Html.DisplayFor(modelItem => item.City)</td>
                        <td>@(item.BirthDate.HasValue ? item.BirthDate.Value.ToShortDateString() : "N/A")</td>
                        <td>@(item.Status == 2 ? "Inactive" : "Active")</td>
                        <td class="action_container">
                            <a class="btn btn-info text-white" asp-action="Details" asp-route-id="@item.Id">
                                <i class="fas fa-info-circle"></i>
                            </a>
                            <button class="btn btn-danger" onclick="ConfirmDelete(@item.Id)">
                                <i class="fas fa-trash-alt"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="modal fade" id="myModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Delete Person</h5>
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this person?</p>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                    <a href="#" class="btn btn-success" onclick="DeleteCandidate()">Confirm</a>
                </div>
            </div>
        </div>
    </div>

    <input type="hidden" id="hiddenId" />

    <div class="modal" tabindex="-1" role="dialog" id="form-modal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title"></h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body"></div>
            </div>
        </div>
    </div>
</div>

<nav aria-label="Suppliers navigation example">
    <vc:pager paging-list="@Model" />
</nav>

<input type="button" value="Back" class="buttons_container btn btn-secondary" onclick="location.href='@Url.Action("Index", "Home")'" />

<script>
    var ConfirmDelete = function (Id) {
        $("#hiddenId").val(Id);
        $("#myModal").modal('show');
    }

    var DeleteCandidate = function () {
        $("#loaderDiv").show();
        var candidateId = $("#hiddenId").val();
        $.ajax({
            url: '@Url.Action("DeleteCandidate", "Candidates")/',
            data: { candidateId: candidateId },
            success: function (result) {
                $("#loaderDiv").hide();
                $("#myModal").modal("hide");
                $("#row_" + candidateId).remove();
                location.reload();
            },
            error: function (result) {
                console.log(result);
            }
        });
    }

    function printPageArea(areaID) {
        var printContent = document.getElementById(areaID);
        var WinPrint = window.open('', '', 'width=900,height=650');
        WinPrint.document.write(printContent.innerHTML);
        WinPrint.document.close();
        WinPrint.focus();
        WinPrint.print();
    }

    function toggleMenu() {
        var menu = document.getElementById('dropdownMenu');
        menu.style.display = menu.style.display === 'block' ? 'none' : 'block';
    }

    // Close the dropdown if the user clicks outside of it
    window.onclick = function (event) {
        if (!event.target.matches('.menu-icon')) {
            var dropdowns = document.getElementsByClassName('dropdown-content');
            for (var i = 0; i < dropdowns.length; i++) {
                var openDropdown = dropdowns[i];
                if (openDropdown.style.display === 'block') {
                    openDropdown.style.display = 'none';
                }
            }
        }
    }
</script>

